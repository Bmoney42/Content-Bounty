rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    // Allow authenticated users to read all bounties, admins can read/write all
    match /bounties/{bountyId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.businessId;
      allow update, delete: if request.auth != null && (
        request.auth.uid == resource.data.businessId || 
        isAdmin()
      );
    }
    
    // Allow authenticated users to read and write applications, admins can access all
    match /applications/{applicationId} {
      allow read, write: if request.auth != null;
      // Additional admin access for management
      allow read, write: if isAdmin();
    }
    
    // Allow authenticated users to create and read submissions, admins can access all
    match /submissions/{submissionId} {
      allow read, write: if request.auth != null;
      // Additional admin access for content review
      allow read, write: if isAdmin();
    }
    
    // Allow authenticated users to read and write their own social media connections
    match /socialConnections/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow test collection for connection testing
    match /_test/{docId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write their own user profiles
    // Business users can also read creator profiles for management purposes
    // Admins can read all user profiles for dashboard management
    match /users/{userId} {
      allow read: if request.auth != null && (
        request.auth.uid == userId || 
        (resource.data.userType == 'creator' && request.auth != null) ||
        isAdmin()
      );
      allow write: if request.auth != null && (
        request.auth.uid == userId ||
        isAdmin()
      );
    }
    
    // Allow authenticated users to read and write their own business profiles, admins can access all
    match /businesses/{businessId} {
      allow read, write: if request.auth != null && (
        request.auth.uid == businessId ||
        isAdmin()
      );
    }
    
    // Allow authenticated users to read and write their own creator profiles, admins can access all
    match /creators/{creatorId} {
      allow read, write: if request.auth != null && (
        request.auth.uid == creatorId ||
        isAdmin()
      );
    }
    
    // Allow authenticated users to read and write their own subscriptions, admins can access all
    match /subscriptions/{userId} {
      allow read, write: if request.auth != null && (
        request.auth.uid == userId ||
        isAdmin()
      );
    }
    
    // Allow authenticated users to read and write their own subscription usage, admins can access all
    // Documents are structured as ${userId}_${month}
    match /subscription_usage/{usageId} {
      allow read, write: if request.auth != null && (
        usageId.matches(request.auth.uid + '_.*') ||
        isAdmin()
      );
    }
    
    // Allow authenticated users to read and write upgrade prompts, admins can access all
    match /upgrade_prompts/{userId} {
      allow read, write: if request.auth != null && (
        request.auth.uid == userId ||
        isAdmin()
      );
    }
  }
}