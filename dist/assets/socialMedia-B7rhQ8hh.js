import{k as i,o as m,x as h,l,t as u}from"./firebase-DxBuhNaX.js";import{d as c}from"./index-Cp-zpohs.js";class p{socialConnectionsCollection="socialConnections";youtubeApiKey="";youtubeApiBase="https://www.googleapis.com/youtube/v3";async getUserSocialConnections(o){try{console.log("📱 Getting social connections for userId:",o);const n=i(c,this.socialConnectionsCollection,o),e=await m(n);if(e.exists()){const t=e.data();return console.log("📱 Found existing social connections:",t),{userId:e.id,platforms:t.platforms||{},totalReach:t.totalReach||0,verifiedPlatforms:t.verifiedPlatforms||[],averageEngagement:t.averageEngagement||0,lastUpdated:t.lastUpdated?.toDate?.()?.toISOString()||t.lastUpdated}}console.log("📱 Creating new social connections document for userId:",o);const a={userId:o,platforms:{},lastUpdated:new Date().toISOString(),totalReach:0,verifiedPlatforms:[],averageEngagement:0};return await h(n,a),console.log("📱 Created new social connections:",a),{userId:o,...a}}catch(n){return console.error("❌ Error getting social connections:",n),null}}async connectYouTube(o,n){try{console.log("🎥 Connecting YouTube for userId:",o);const e=await this.getYouTubeChannelInfo(n);if(!e)throw console.error("❌ Failed to get YouTube channel information"),new Error("Failed to get YouTube channel information");console.log("🎥 Got YouTube channel info:",e);const a={id:`youtube_${o}`,name:"youtube",isConnected:!0,accessToken:n,userId:o,stats:{followers:e.subscriberCount,totalViews:e.viewCount,engagementRate:e.engagementRate,postsCount:e.videoCount,averageViews:e.averageViews,verified:e.verified,platformUrl:`https://youtube.com/channel/${e.channelId}`,lastUpdated:new Date().toISOString()},lastSync:new Date().toISOString()},t=await this.getUserSocialConnections(o);return t&&(t.platforms.youtube=a,t.lastUpdated=new Date().toISOString(),t.totalReach=this.calculateTotalReach(t.platforms),t.verifiedPlatforms=this.getVerifiedPlatforms(t.platforms),t.averageEngagement=this.calculateAverageEngagement(t.platforms),await l(i(c,this.socialConnectionsCollection,o),{platforms:t.platforms,lastUpdated:u(),totalReach:t.totalReach,verifiedPlatforms:t.verifiedPlatforms,averageEngagement:t.averageEngagement})),!0}catch(e){return console.error("Error connecting YouTube:",e),!1}}async getYouTubeChannelInfo(o){try{console.log("🎥 Fetching YouTube channel info with access token");const n=`${this.youtubeApiBase}/channels?part=snippet,statistics&mine=true&access_token=${o}`;console.log("🎥 YouTube API URL:",n.replace(o,"[REDACTED]"));const e=await fetch(n),a=await e.json();if(console.log("🎥 YouTube API response:",a),!e.ok)throw console.error("❌ YouTube API error:",a),new Error(`YouTube API error: ${a.error?.message||"Unknown error"}`);if(!a.items||a.items.length===0)throw console.error("❌ No YouTube channel found in response"),new Error("No YouTube channel found");const t=a.items[0],s=t.id,r=t.statistics,b=await(await fetch(`${this.youtubeApiBase}/search?part=snippet&channelId=${s}&type=video&order=date&maxResults=10&access_token=${o}`)).json(),g=parseInt(r.viewCount)||0,f=parseInt(r.subscriberCount)||1,d=f>0?g/f*100:0;return{channelId:s,subscriberCount:parseInt(r.subscriberCount)||0,viewCount:parseInt(r.viewCount)||0,videoCount:parseInt(r.videoCount)||0,engagementRate:Math.min(d,100),averageViews:g/Math.max(parseInt(r.videoCount),1),verified:t.snippet.verified||!1}}catch(n){return console.error("Error getting YouTube channel info:",n),null}}async disconnectPlatform(o,n){try{const e=await this.getUserSocialConnections(o);return e&&(delete e.platforms[n],e.lastUpdated=new Date().toISOString(),e.totalReach=this.calculateTotalReach(e.platforms),e.verifiedPlatforms=this.getVerifiedPlatforms(e.platforms),e.averageEngagement=this.calculateAverageEngagement(e.platforms),await l(i(c,this.socialConnectionsCollection,o),{platforms:e.platforms,lastUpdated:u(),totalReach:e.totalReach,verifiedPlatforms:e.verifiedPlatforms,averageEngagement:e.averageEngagement})),!0}catch(e){return console.error("Error disconnecting platform:",e),!1}}async refreshPlatformStats(o,n){try{const e=await this.getUserSocialConnections(o);if(!e||!e.platforms[n])return!1;const a=e.platforms[n];if(n==="youtube"&&a.accessToken){const t=await this.getYouTubeChannelInfo(a.accessToken);t&&(a.stats={followers:t.subscriberCount,totalViews:t.viewCount,engagementRate:t.engagementRate,postsCount:t.videoCount,averageViews:t.averageViews,verified:t.verified,platformUrl:`https://youtube.com/channel/${t.channelId}`,lastUpdated:new Date().toISOString()},a.lastSync=new Date().toISOString(),await l(i(c,this.socialConnectionsCollection,o),{[`platforms.${n}`]:a,lastUpdated:u()}))}return!0}catch(e){return console.error("Error refreshing platform stats:",e),!1}}async getConnectionStatus(o){const n=["youtube","instagram","tiktok","facebook","twitter"],e=await this.getUserSocialConnections(o);return n.map(a=>{const t=e?.platforms[a],s=!!t?.isConnected,r=t?.expiresAt?new Date(t.expiresAt)<new Date:!1;return{platform:a,isConnected:s,isExpired:r,lastSync:t?.lastSync,error:r?"Token expired":void 0}})}calculateTotalReach(o){return Object.values(o).reduce((n,e)=>n+(e?.stats?.followers||0),0)}getVerifiedPlatforms(o){return Object.entries(o).filter(([n,e])=>e?.stats?.verified).map(([n])=>n)}calculateAverageEngagement(o){const n=Object.values(o).filter(a=>a?.isConnected);return n.length===0?0:n.reduce((a,t)=>a+(t?.stats?.engagementRate||0),0)/n.length}getOAuthUrl(o){const e=`${window.location.origin}/oauth/callback`;switch(console.log("🔗 Generating OAuth URL for platform:",o),console.log("🔗 Redirect URI:",e),console.log("🔗 Google Client ID available:",!1),o){case"youtube":return console.error("❌ VITE_GOOGLE_CLIENT_ID not found in environment"),"";case"instagram":return`https://api.instagram.com/oauth/authorize?client_id=undefined&redirect_uri=${encodeURIComponent(e)}&scope=user_profile,user_media&response_type=code&state=${o}`;default:return""}}}const y=new p;export{y as s};
